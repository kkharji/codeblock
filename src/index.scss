// modified version of https://github.com/zalog/placeholder-loading;
@use "sass:math";
@use "sass:color";
@use "sass:list";

$ph-cols:                 12;
$ph-cols-remove-odd:      true;
$ph-spacer:               20.6px;
$ph-line-normal-height:   12px;
$ph-line-large-height:    15px;
$ph-animation:            ph-animation 0.85s linear infinite;
$dark-plus: (#1e1e1e, true);
$dracula-soft: (#282A36, true);
$dracula: (#282A36, true);
$github-dark-dimmed: (#22272e, true);
$github-dark: (#0d1117, true);
$github-light: (#ffffff, false);
$hc_light: (#fff, false);
$light-plus: (#ffffff, false);
$material-darker: (#212121, false);
$material-default: (#263238, false);
$material-lighter: (#FAFAFA, false);
$material-ocean: (#0F111A, dark);
$material-palenight: (#292D3E, dark);
$min-dark: (#1f1f1f, dark);
$min-light: (#ffffff, false);
$monokai: (#272822, true);
$nord: (#2e3440, true);
$one-dark-pro: (#282c34, true);
$poimandres: (#1b1e28, true);
$rose-pine-dawn: (#faf4ed, false);
$rose-pine-moon: (#232136, true);
$rose-pine: (#191724, true);
$slack-dark: (#222222, true);
$slack-ochin: (#ffffff, false);
$solarized-dark: (#002B36, true);
$solarized-light: (#fdf6e3, false);
$vitesse-dark: (#121212, true);
$vitesse-light: (#ffffff, false);

$backgrounds: (
  'dark-plus': $dark-plus,
  'dracula-soft': $dracula-soft,
  'dracula': $dracula,
  'github-dark-dimmed': $github-dark-dimmed,
  'github-dark': $github-dark,
  'github-light': $github-light,
  'hc_light': $hc_light,
  'light-plus': $light-plus,
  'material-darker': $material-darker,
  'material-default': $material-default,
  'material-lighter': $material-lighter,
  'material-ocean': $material-ocean,
  'material-palenight': $material-palenight,
  'min-dark': $min-dark,
  'min-light': $min-light,
  'monokai': $monokai,
  'nord': $nord,
  'one-dark-pro': $one-dark-pro,
  'poimandres': $poimandres,
  'rose-pine-dawn': $rose-pine-dawn,
  'rose-pine-moon': $rose-pine-moon,
  'rose-pine': $rose-pine,
  'slack-dark': $slack-dark,
  'slack-ochin': $slack-ochin,
  'solarized-dark': $solarized-dark,
  'solarized-light': $solarized-light,
  'vitesse-dark': $vitesse-dark,
  'vitesse-light': $vitesse-light
);

@each $mode, $info in $backgrounds {
  .cb-container.#{$mode} { background: list.nth($info, 1); }
}

.cb-container {
  padding: 20px;
  border-radius: 10px;
  & pre.shiki { }
}


// pre.shiki, .ph-bg { border-radius: 1rem; padding: 1.75rem; }
// pre.shiki { margin-bottom: 2.25rem; }
// .ph-bg { margin-top: 24px; margin-bottom: 36px; }

.ph-item, *, ::after, ::before {
  box-sizing: border-box;
  border-radius: 0.75rem;
}

.ph-item {
  position: relative;
  display: flex;
  flex-wrap: wrap;
  overflow: hidden;
  padding-top: 0.36rem;
  padding-bottom: 0.35rem;
  &::before {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 50%;
    z-index: 1;
    width: 500%;
    margin-left: -250%;
    pointer-events: none;
    content: " ";
    -webkit-animation: $ph-animation;
    animation: $ph-animation;
  }
}

.ph-row {
  display: flex;
  flex-wrap: wrap;
  margin-top: -($ph-spacer * 0.6);

  div {
    height: $ph-line-normal-height;
    margin-top: ($ph-spacer * 0.6);
      border-width: 1px;
      &.empty { opacity: 0.8; border-width: 0px;}

  }

  .big, &.big div {
    height: $ph-line-large-height;
  }
}

[class*=ph-col] > * + .ph-row { margin-top: 0; }
[class*=ph-col] > * + * { margin-top: ($ph-spacer * 0.5); }
[dir="rtl"] .ph-item { direction: rtl; }
[dir="rtl"]  [class*=ph-col] { direction: rtl; }

@-webkit-keyframes ph-animation {
  0% { transform: translate3d(-30%, 0, 0); }
  100% { transform: translate3d(30%, 0, 0); }
}

@keyframes ph-animation {
  0% { transform: translate3d(-30%, 0, 0); }
  100% { transform: translate3d(30%, 0, 0); }
}

@mixin ph-make-col($size, $columns) {
  .ph-col-#{$size} { flex: 0 0 math.percentage(math.div($size, $columns)); }
}

@each $theme, $info in $backgrounds {
  $bg: list.nth($info, 1);
  $is-dark: list.nth($info, 2);

  .#{$theme} .ph-item::before {
    background: linear-gradient(to right, rgba(#000, 0) 46%, rgba($bg, 1) 50%, rgba(#000, 0) 54%) 50% 50%;
  }

  .#{$theme} .ph-row div {
    background: darken($color: $bg, $amount: 10);
    border-color: lighten($color: $bg, $amount: 1);
    &.empty {
      @if $is-dark {
        background: linear-gradient(to right, darken($color: $bg, $amount: 1), darken($color: $bg, $amount: 16));
      } @else {
        background: linear-gradient(to right, darken($color: $bg, $amount: 3), darken($color: $bg, $amount: 18));
      }
    }
  }
}

@for $i from 1 through $ph-cols {
  @if $ph-cols-remove-odd and $i % 2 == 0 { @include ph-make-col($i, $ph-cols); }
  @else if not $ph-cols-remove-odd { @include ph-make-col($i, $ph-cols); }
}
